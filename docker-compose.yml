version: '3'

volumes:
  solr:
  db:
  db-fcrepo:
  app:
  mysql-db:
  matomo:
  matomo_logs:

networks:
  internal:

services:
  fcrepo:
    image: ualbertalib/docker-fcrepo4:4.7
    expose:
      - 8080
    depends_on:
      - fcrepodb
    networks:
      internal:
    environment:
      - CATALINA_OPTS=-Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC -Dfcrepo.home=/data -Dfcrepo.object.directory=/data/objects -Dfcrepo.binary.directory=/data/binaries -Dfcrepo.postgresql.username=$POSTGRES_USER -Dfcrepo.postgresql.password=$POSTGRES_PASSWORD -Dfcrepo.postgresql.host=$POSTGRES_HOST_FCREPO -Dfcrepo.postgresql.port=$POSTGRES_PORT -Dfcrepo.modeshape.configuration=classpath:/config/jdbc-postgresql/repository.json

  solr:
    image: solr:8
    expose:
      - 8983
    ports:
      - 8983:8983
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost:8983/solr/"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      internal:
    volumes:
      - solr:/opt/solr/server/solr/mycores
      - ./hyrax/solr/conf:/opt/solr/solr_conf
    command:
      - sh
      - "-c"
      - "precreate-core hydra-test /opt/solr/solr_conf; solr-precreate ${SOLR_CORE} /opt/solr/solr_conf"

  db: &db
    image: postgres:13-alpine
    networks:
      internal:
    env_file:
      - .env
    expose:
      - 5432
  fcrepodb:
    <<: *db
    environment:
      - POSTGRES_DB=${POSTGRES_DB_FCREPO}
    volumes:
      - db-fcrepo:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "POSTGRES_PASSWORD=${POSTGRES_PASSWORD} pg_isready -U ${POSTGRES_USER} -h localhost -d ${POSTGRES_DB_FCREPO}"]
      interval: 30s
      timeout: 5s
      retries: 3
  appdb:
    <<: *db
    environment:
      - POSTGRES_DB=${POSTGRES_DB_APP}
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "POSTGRES_PASSWORD=${POSTGRES_PASSWORD} pg_isready -U ${POSTGRES_USER} -h localhost -d ${POSTGRES_DB_APP}"]
      interval: 30s
      timeout: 5s
      retries: 3

  app: &app
    build:
      context: hyrax
      args:
        RAILS_ENV: ${RAILS_ENV}
        UPLOADS_PATH: ${UPLOADS_PATH}
        DERIVATIVES_PATH: ${DERIVATIVES_PATH}
        CACHE_PATH: ${CACHE_PATH}
        FITS_PATH: ${FITS_PATH}
        FITS_VERSION: ${FITS_VERSION}
    env_file:
      - .env
    volumes:
      - app:${UPLOADS_PATH}
      - app:${DERIVATIVES_PATH}
      - app:${CACHE_PATH}
      - app:${BRAND_PATH}
    networks:
      internal:

  web:
    <<: *app
    command: bash -c "/bin/docker-entrypoint.sh"
    environment:
      - VIRTUAL_HOST=hyrax3.docker
      - VIRTUAL_PORT=3000
    depends_on:
      - appdb
      - solr
      - fcrepo
      - redis
    expose:
      - 3000

  workers:
    <<: *app
    command: bundle exec sidekiq
    depends_on:
      - appdb
      - solr
      - fcrepo
      - redis

  redis:
    image: redis:6
    command: redis-server --appendonly yes
    expose:
      - 6379
    networks:
      internal:
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  matomo_db:
    image: mariadb
    command: --max-allowed-packet=64MB
    restart: always
    volumes:
      - mysql-db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    env_file:
      - .env
    expose:
      - 3306
    networks:
      internal:
        aliases:
          - matomo_db

  matomo_app:
    image: matomo:fpm-alpine
    restart: always
    links:
      - matomo_db
    volumes:
      # - ./matomo_config:/var/www/html/config:rw
      - matomo_logs:/var/www/html/logs
      - matomo:/var/www/html
      - ./matomo_config.ini.php:/var/www/html/config/config.ini.php:r
    environment:
      - MATOMO_DATABASE_HOST=matomo_db
      - PHP_MEMORY_LIMIT=2048M
    env_file:
      - .env
    networks:
      internal:
        aliases:
          - matomo_app

  matomo_web:
    image: nginx:alpine
    restart: always
    volumes:
      - matomo:/var/www/html:ro
      # see https://github.com/matomo-org/matomo-nginx
      - ./matomo.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 8000:80
#    expose:
#      - 8000
    networks:
      internal:
        aliases:
          - matomo

